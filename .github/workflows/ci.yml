name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Gleam
        uses: erlef/setup-beam@v1
        with:
          otp-version: "26.2.3"
          gleam-version: "1.0.0"
          rebar3-version: "3"
      - name: Set up deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Download dependencies - core
        run: gleam deps download
        working-directory: cozyauth_core
      - name: Download dependencies - api
        run: gleam deps download
        working-directory: cozyauth_api
      - name: Download dependencies - dev_server
        run: gleam deps download
        working-directory: cozyauth_dev_server
      - name: Run tests - core
        run: gleam test
        working-directory: cozyauth_core
      - name: Run tests - api
        run: gleam test
        working-directory: cozyauth_api
      - name: Run tests - dev_server
        run: gleam test
        working-directory: cozyauth_dev_server
      - name: Run tests - native
        run: cargo test --verbose

  fmt:
    name: Check Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Gleam
        uses: erlef/setup-beam@v1
        with:
          otp-version: "26.2.3"
          gleam-version: "1.0.0"
      - name: Check formatting - core
        run: gleam format --check src test
        working-directory: cozyauth_core
      - name: Check formatting - api
        run: gleam format --check src test
        working-directory: cozyauth_api
      - name: Check formatting - dev_server
        run: gleam format --check src test
        working-directory: cozyauth_dev_server
      - name: Check formatting - native
        run: cargo fmt -- --check

  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Clippy
        run: cargo clippy -- -D warnings

  build-image-api:
    name: Build container image for api
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./cozyauth_api
          file: ./Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
